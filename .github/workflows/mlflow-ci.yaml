name: MLflow CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.12.7
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.7"

      - name: Check Env
        run: |
          python --version
          pip --version

      - name: Install dependencies
        run: |
          pip install mlflow==2.17.0 scikit-learn==1.5.2 pandas==2.2.3 numpy==2.1.2 xgboost==2.1.1 matplotlib==3.9.2 seaborn==0.13.2 python-dotenv==1.0.1

      - name: Set MLflow Tracking URI
        run: |
          echo "MLFLOW_TRACKING_URI=https://dagshub.com/covryzne/Eksperimen_SML_ShendiTeukuMaulanaEfendi.mlflow" >> $GITHUB_ENV
          echo "MLFLOW_TRACKING_USERNAME=covryzne" >> $GITHUB_ENV
          echo "MLFLOW_TRACKING_PASSWORD=${{ secrets.DAGSHUB_TOKEN }}" >> $GITHUB_ENV

      - name: Run MLflow project
        env:
          DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
        run: |
          cd MLProject
          # Simpan output mlflow run ke file
          mlflow run . --env-manager=local -P data_path=student_habits_preprocessing.csv > mlflow_output.log
          ls -la Membangun_model/ || echo "Membangun_model directory not found"
          # Ambil run IDs dari output
          run_ids=$(grep 'MLFLOW_RUN_ID=' mlflow_output.log | cut -d'=' -f2 | tr '\n' ' ')
          if [ -z "$run_ids" ]; then
            echo "No run IDs found in mlflow output"
            cat mlflow_output.log
            exit 1
          fi
          echo "run_ids=$run_ids" >> $GITHUB_ENV
          echo "Latest run_ids: $run_ids"

      - name: Download artifacts from DagsHub
        env:
          DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
        run: |
          cd MLProject
          export MLFLOW_TRACKING_URI=https://dagshub.com/covryzne/Eksperimen_SML_ShendiTeukuMaulanaEfendi.mlflow
          export MLFLOW_TRACKING_USERNAME=covryzne
          export MLFLOW_TRACKING_PASSWORD=${{ secrets.DAGSHUB_TOKEN }}
          mkdir -p ../mlruns/0  # Buat mlruns di root
          for run_id in ${{ env.run_ids }}; do
            echo "Downloading artifacts for run_id: $run_id"
            mlflow artifacts download --run-id $run_id --dst-path ../mlruns/0/$run_id/artifacts
            ls -la ../mlruns/0/$run_id/artifacts || echo "No artifacts downloaded for run_id: $run_id"
          done
          ls -la ../mlruns/ || echo "mlruns directory structure after download"

      - name: Upload artifacts to GitHub LFS
        run: |
          git lfs install
          git lfs track "mlruns/**/*"  # Track mlruns di root
          ls -la .  # Debug: cek isi root
          if [ -d "mlruns" ]; then
            ls -la mlruns/  # Debug: cek isi mlruns
            git config user.name "covryzne"
            git config user.email "shendyteuku2@gmail.com"  # Ganti dengan email lu
            git add mlruns/
            git add .gitattributes
            git commit -m "Add MLflow artifacts to LFS" || echo "No changes to commit"
            git push origin main
          else
            echo "No mlruns directory found, skipping LFS upload"
            exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t workflow-ci:latest MLProject/

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Tag Docker image
        run: |
          docker tag workflow-ci:latest ${{ secrets.DOCKERHUB_USERNAME }}/workflow-ci:latest

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/workflow-ci:latest

      - name: Post Log in to Docker Hub
        if: always()
        run: |
          docker logout

      - name: Post Set up Python 3.12.7
        if: always()
        run: |
          echo "Python setup completed"

      - name: Post Run actions/checkout@v3
        if: always()
        run: |
          echo "Checkout completed"

      - name: Complete job
        if: always()
        run: |
          echo "CI job completed"
